server {
    listen 80;
    server_name service-status.garyzone.pro localhost;
    root /usr/share/nginx/html;
    index index.html;
    
    # Handle X-Forwarded-Proto for HTTPS behind proxy
    set $forwarded_proto $http_x_forwarded_proto;
    if ($forwarded_proto = '') {
        set $forwarded_proto $scheme;
    }

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Force HTTPS redirect if behind proxy
    if ($forwarded_proto != 'https') {
        return 301 https://$server_name$request_uri;
    }

    # Handle React Router (SPA)
    location / {
        try_files $uri $uri/ /index.html;

        # Add CORS headers for API calls
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
    }

    # Cache static assets (separate location - no nesting)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin *;
    }
    
    # Custom error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Proxy API calls to external services (for CORS)
    location /api/openai/ {
        proxy_pass https://status.openai.com/api/v2/;
        proxy_set_header Host status.openai.com;
        proxy_ssl_server_name on;
        proxy_hide_header Access-Control-Allow-Origin;
        add_header Access-Control-Allow-Origin *;
    }

    location /api/anthropic/ {
        proxy_pass https://status.anthropic.com/api/v2/;
        proxy_set_header Host status.anthropic.com;
        proxy_ssl_server_name on;
        proxy_hide_header Access-Control-Allow-Origin;
        add_header Access-Control-Allow-Origin *;
    }

    location /api/google/ {
        proxy_pass https://status.cloud.google.com/;
        proxy_set_header Host status.cloud.google.com;
        proxy_ssl_server_name on;
        proxy_hide_header Access-Control-Allow-Origin;
        add_header Access-Control-Allow-Origin *;
    }

    # Allow standard text endpoints
    location = /robots.txt { }
    location = /ads.txt { }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
    }

    location ~* \.(env|log)$ {
        deny all;
    }
} 